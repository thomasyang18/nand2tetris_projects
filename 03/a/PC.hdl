// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    
    Not(in=load, out=NOTload);
    And(a=NOTload, b=inc, out= incANDNOTload);

    Mux16(a=finalOutput, b=in, sel=load, out=output0);

    Inc16(in=output0, out=output0PLUSONE);

    Mux16(a=output0, b= output0PLUSONE, sel=incANDNOTload, out=output1);
    
    Mux16(a=output1, b = false, sel=reset, out=outRes);
    
    // if not reset, not inc, not load, don't load
    // so if inc, reset, or load, load

    Or(a=load, b=inc, out=loadORinc);
    Or(a=loadORinc, b=reset, out=loadORincORreset);

    Register(in=outRes, load=loadORincORreset, out=finalOutput);

    Id16(in=finalOutput, out=out); 
     
}
